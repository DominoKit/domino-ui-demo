SimplePaginationPlugin<Contact> simplePaginationPlugin = new SimplePaginationPlugin<>(10);//page size
TableConfig<Contact> tableConfig = new TableConfig<>();
tableConfig
        .addColumn(ColumnConfig.<Contact>create("id", "#")
                .textAlign("right")
                .asHeader()
                .sortable()
                .setCellRenderer(cell -> new Text(cell.getTableRow().getRecord().getIndex() + 1 + "")))

        .addColumn(ColumnConfig.<Contact>create("status", "Status")
                .textAlign("center")
                .setCellRenderer(cell -> {
                    if (cell.getTableRow().getRecord().isActive()) {
                        return Style.of(Icons.ALL.check_circle()).setColor(Color.GREEN_DARKEN_3.getHex()).asElement();
                    } else {
                        return Style.of(Icons.ALL.highlight_off()).setColor(Color.RED_DARKEN_3.getHex()).asElement();
                    }
                }))
        .addColumn(ColumnConfig.<Contact>create("firstName", "First name")
                .sortable()
                .setCellRenderer(cell -> new Text(cell.getTableRow().getRecord().getName())))


        .addColumn(ColumnConfig.<Contact>create("gender", "Gender")
                .setCellRenderer(cell -> ContactUiUtils.getGenderElement(cell.getRecord()))
                .textAlign("center"))

        .addColumn(ColumnConfig.<Contact>create("eyeColor", "Eye color")
                .setCellRenderer(cell -> ContactUiUtils.getEyeColorElement(cell.getRecord()))
                .textAlign("center"))

        .addColumn(ColumnConfig.<Contact>create("balance", "Balance")
                .sortable()
                .setCellRenderer(cellInfo -> ContactUiUtils.getBalanceElement(cellInfo.getRecord())))

        .addColumn(ColumnConfig.<Contact>create("email", "Email")
                .setCellRenderer(cell -> new Text(cell.getTableRow().getRecord().getEmail())))

        .addColumn(ColumnConfig.<Contact>create("phone", "Phone")
                .setCellRenderer(cell -> new Text(cell.getTableRow().getRecord().getPhone())))

        .addColumn(ColumnConfig.<Contact>create("badges", "Badges")
                .setCellRenderer(cell -> {
                    if (cell.getTableRow().getRecord().getAge() < 35) {
                        return Badge.create("Young")
                                .setBackground(ColorScheme.GREEN.color()).asElement();
                    }
                    return new Text("");
                }));

tableConfig
        .addPlugin(new SortPlugin<>())
        .addPlugin(new HeaderBarPlugin<Contact>("Demo table", "this a sample table with all features")
                .addActionElement(new HeaderBarPlugin.SearchTableAction<Contact>()
                        .addSearchField(SelectOption.create("", "Name, Email"), true)
                        .addSearchField(SelectOption.create("name", "Name"))
                        .addSearchField(SelectOption.create("email", "Email"))
                )
        );

tableConfig.addPlugin(simplePaginationPlugin);

LocalListDataStore<Contact> localListDataStore = new LocalListDataStore<>();
localListDataStore.setRecordsSorter(new ContactSorter());
localListDataStore.setSearchFilter(new ContactSearchFilter());
localListDataStore.setPagination(simplePaginationPlugin.getSimplePagination());

DataTable<Contact> table = new DataTable<>(tableConfig, localListDataStore);

element.appendChild(Card.create("SIMPLE PAGINATION", "Simple pagination plugin allows the table to fire pagination events helpful for the datasource")
    .setCollapsible()
    .appendContent(new TableStyleActions(table))
    .appendContent(table.asElement())
    .asElement());

List<Contact> contacts = ...
localListDataStore.setData(contacts);
table.load();